# PostgreSQL Backup Configuration

# SSH connection settings for the production server
ssh:
  host: "prod-server.example.com"
  port: 22
  username: "backup-user"
  # Use either password or key_path for authentication
  # password: "your-ssh-password"
  key_path: "/home/user/.ssh/id_rsa"
  # Optional: path to known_hosts file for host key verification
  # known_hosts: "/home/user/.ssh/known_hosts"

# PostgreSQL connection settings (as seen from the production server)
postgres:
  host: "localhost"  # PostgreSQL host from prod server's perspective
  port: 5432
  database: "production_db"
  username: "postgres"
  password: "your-postgres-password"

# S3-compatible storage settings (Garage)
s3:
  endpoint: "https://s3.garage.example.com"
  access_key_id: "your-access-key"
  secret_access_key: "your-secret-key"
  bucket: "backups"
  prefix: "postgres"  # Optional: prefix for backup files
  region: "garage"    # Default: us-east-1

# Backup configuration
backup:
  temp_dir: "/tmp"           # Temporary directory on prod server
  retention_count: 7         # Number of backups to keep
  compression_level: 6       # Compression level (0-9, 0=none, 9=max)

# Operation timeouts
timeouts:
  ssh_connection: "30s"      # SSH connection timeout
  backup_operation: "2h"     # pg_dump operation timeout
  transfer: "1h"             # File transfer timeout
  s3_upload: "2h"            # S3 upload timeout

# Restore configuration (optional)
restore:
  enabled: false             # Enable/disable restore functionality
  
  # Optional: Control SSH usage for restore (defaults to true)
  # use_ssh: false           # Set to false for local restore without SSH
  
  # Optional: Auto-install PostgreSQL client tools if missing (local restore only)
  # auto_install: true       # Automatically install pg_restore if not found
  
  # Optional: SSH connection for restore target server (defaults to main SSH settings if not specified)
  # Uncomment and configure if restoring to a different server than the backup source
  # Note: Ignored if use_ssh is false
  # ssh:
  #   host: "staging-server.example.com"
  #   port: 22
  #   username: "restore-user"
  #   password: "password"           # Use either password or key_path
  #   key_path: "/home/user/.ssh/id_rsa"
  #   known_hosts: "/home/user/.ssh/known_hosts"
  
  # Target PostgreSQL connection (defaults to source postgres settings if not specified)
  target_host: ""           # Target PostgreSQL host (defaults to postgres.host)
  target_port: 0            # Target PostgreSQL port (defaults to postgres.port)
  target_database: ""        # Target database name (defaults to postgres.database)
  target_username: ""        # Target PostgreSQL username (defaults to postgres.username)
  target_password: ""        # Target PostgreSQL password (defaults to postgres.password)
  drop_existing: false       # Drop existing database before restore
  force_disconnect: false    # Force disconnect existing connections when dropping database
  create_db: false          # Create database if it doesn't exist
  owner: ""                 # Database owner (optional, used when create_db is true)
  jobs: 1                   # Number of parallel jobs for restore (1-8)

# Email notification settings (optional)
# Requires: https://github.com/hra42/go-notification
notification:
  enabled: false                                           # Enable/disable notifications
  binary_path: "/usr/local/bin/go-notification"          # Path to notification binary
  api_key: "re_example"                                 # API key for notification service (example, see docs of the notification service)
  from: "notifications@example.com"                    # From email address
  to: "hra42@example.com"                                  # To email address
  reply_to: "example@example.com"               # Reply-to address (optional)
